{"includedArchiveIdentifiers":["com.joyfill.JoyfillFormulas"],"interfaceLanguages":{"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/joyfillformulas\/evaluator\/init(functionregistry:)","title":"init(functionRegistry: FunctionRegistry)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/joyfillformulas\/evaluator\/evaluate(node:context:)","title":"func evaluate(node: ASTNode, context: EvaluationContext) -> Result<FormulaValue, FormulaError>","type":"method"}],"path":"\/documentation\/joyfillformulas\/evaluator","title":"Evaluator","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/joyfillformulas\/functionregistry\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/joyfillformulas\/functionregistry\/lookup(name:)","title":"func lookup(name: String) -> FormulaFunction?","type":"method"},{"path":"\/documentation\/joyfillformulas\/functionregistry\/register(name:function:)","title":"func register(name: String, function: FormulaFunction)","type":"method"}],"path":"\/documentation\/joyfillformulas\/functionregistry","title":"FunctionRegistry","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/joyfillformulas\/parser\/init(functionregistry:)","title":"init(functionRegistry: FunctionRegistry)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/joyfillformulas\/parser\/parse(formula:)","title":"func parse(formula: String) -> Result<ASTNode, FormulaError>","type":"method"}],"path":"\/documentation\/joyfillformulas\/parser","title":"Parser","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/joyfillformulas\/evaluationcontext\/contextbyadding(variable:value:)","title":"func contextByAdding(variable: String, value: FormulaValue) -> EvaluationContext","type":"method"},{"path":"\/documentation\/joyfillformulas\/evaluationcontext\/resolvereference(_:)","title":"func resolveReference(String) -> Result<FormulaValue, FormulaError>","type":"method"}],"path":"\/documentation\/joyfillformulas\/evaluationcontext","title":"EvaluationContext","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"path":"\/documentation\/joyfillformulas\/arrayfunctions","title":"ArrayFunctions","type":"struct"},{"path":"\/documentation\/joyfillformulas\/datefunctions","title":"DateFunctions","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/joyfillformulas\/dictionarycontext\/init(_:)","title":"init([String : FormulaValue])","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/joyfillformulas\/dictionarycontext\/contextbyadding(variable:value:)","title":"func contextByAdding(variable: String, value: FormulaValue) -> EvaluationContext","type":"method"},{"path":"\/documentation\/joyfillformulas\/dictionarycontext\/resolvereference(_:)","title":"func resolveReference(String) -> Result<FormulaValue, FormulaError>","type":"method"}],"path":"\/documentation\/joyfillformulas\/dictionarycontext","title":"DictionaryContext","type":"struct"},{"path":"\/documentation\/joyfillformulas\/logicalfunctions","title":"LogicalFunctions","type":"struct"},{"path":"\/documentation\/joyfillformulas\/mathfunctions","title":"MathFunctions","type":"struct"},{"path":"\/documentation\/joyfillformulas\/stringfunctions","title":"StringFunctions","type":"struct"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/joyfillformulas\/formulafunction","title":"FormulaFunction","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/joyfillformulas\/astnode\/arrayaccess(array:index:)","title":"case arrayAccess(array: ASTNode, index: ASTNode)","type":"case"},{"path":"\/documentation\/joyfillformulas\/astnode\/arrayliteral(_:)","title":"case arrayLiteral([ASTNode])","type":"case"},{"path":"\/documentation\/joyfillformulas\/astnode\/functioncall(name:arguments:)","title":"case functionCall(name: String, arguments: [ASTNode])","type":"case"},{"path":"\/documentation\/joyfillformulas\/astnode\/infixoperation(operator:left:right:)","title":"case infixOperation(operator: String, left: ASTNode, right: ASTNode)","type":"case"},{"path":"\/documentation\/joyfillformulas\/astnode\/lambda(parameters:body:)","title":"case lambda(parameters: [String], body: ASTNode)","type":"case"},{"path":"\/documentation\/joyfillformulas\/astnode\/literal(_:)","title":"case literal(FormulaValue)","type":"case"},{"path":"\/documentation\/joyfillformulas\/astnode\/objectliteral(_:)","title":"case objectLiteral([(String, ASTNode)])","type":"case"},{"path":"\/documentation\/joyfillformulas\/astnode\/prefixoperation(operator:operand:)","title":"case prefixOperation(operator: String, operand: ASTNode)","type":"case"},{"path":"\/documentation\/joyfillformulas\/astnode\/propertyaccess(object:property:)","title":"case propertyAccess(object: ASTNode, property: String)","type":"case"},{"path":"\/documentation\/joyfillformulas\/astnode\/reference(_:)","title":"case reference(String)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/joyfillformulas\/astnode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/joyfillformulas\/astnode\/==(_:_:)","title":"static func == (ASTNode, ASTNode) -> Bool","type":"op"}],"path":"\/documentation\/joyfillformulas\/astnode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/joyfillformulas\/astnode","title":"ASTNode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/joyfillformulas\/formulaerror\/circularreference(_:)","title":"case circularReference(String)","type":"case"},{"path":"\/documentation\/joyfillformulas\/formulaerror\/divisionbyzero","title":"case divisionByZero","type":"case"},{"path":"\/documentation\/joyfillformulas\/formulaerror\/invalidarguments(function:reason:)","title":"case invalidArguments(function: String, reason: String)","type":"case"},{"path":"\/documentation\/joyfillformulas\/formulaerror\/invalidreference(_:)","title":"case invalidReference(String)","type":"case"},{"path":"\/documentation\/joyfillformulas\/formulaerror\/syntaxerror(_:)","title":"case syntaxError(String)","type":"case"},{"path":"\/documentation\/joyfillformulas\/formulaerror\/typemismatch(expected:actual:)","title":"case typeMismatch(expected: String, actual: String)","type":"case"},{"path":"\/documentation\/joyfillformulas\/formulaerror\/unknownerror(_:)","title":"case unknownError(String)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/joyfillformulas\/formulaerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/joyfillformulas\/formulaerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/joyfillformulas\/formulaerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/joyfillformulas\/formulaerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/joyfillformulas\/formulaerror","title":"FormulaError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/joyfillformulas\/formulavalue\/array(_:)","title":"case array([FormulaValue])","type":"case"},{"path":"\/documentation\/joyfillformulas\/formulavalue\/boolean(_:)","title":"case boolean(Bool)","type":"case"},{"path":"\/documentation\/joyfillformulas\/formulavalue\/date(_:)","title":"case date(Date)","type":"case"},{"path":"\/documentation\/joyfillformulas\/formulavalue\/dictionary(_:)","title":"case dictionary([String : FormulaValue])","type":"case"},{"path":"\/documentation\/joyfillformulas\/formulavalue\/error(_:)","title":"case error(FormulaError)","type":"case"},{"path":"\/documentation\/joyfillformulas\/formulavalue\/lambda(parameters:body:)","title":"case lambda(parameters: [String], body: ASTNode)","type":"case"},{"path":"\/documentation\/joyfillformulas\/formulavalue\/null","title":"case null","type":"case"},{"path":"\/documentation\/joyfillformulas\/formulavalue\/number(_:)","title":"case number(Double)","type":"case"},{"path":"\/documentation\/joyfillformulas\/formulavalue\/string(_:)","title":"case string(String)","type":"case"},{"path":"\/documentation\/joyfillformulas\/formulavalue\/undefined","title":"case undefined","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/joyfillformulas\/formulavalue\/boolvalue","title":"var boolValue: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/joyfillformulas\/formulavalue\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/joyfillformulas\/formulavalue\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/joyfillformulas\/formulavalue","title":"FormulaValue","type":"enum"}],"path":"\/documentation\/joyfillformulas","title":"JoyfillFormulas","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":2}}